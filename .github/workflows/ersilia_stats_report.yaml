name: Ersilia Weekly Stats Report

on:
  push:
    paths:
      - 'data/airtable_api_identifiers.csv'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update_stats_and_readme:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Create a New Branch
      - name: Create a new branch
        run: |
          BRANCH_NAME="update-ersilia-stats-${{ github.run_id }}"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # 3. Set Up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Fetch Airtable Tables
      - name: Run fetch_airtables.py
        env:
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
        run: |
          python scripts/fetch_internal_stats.py $AIRTABLE_API_KEY

      # 5. Fetch OpenAlex Data
      - name: Fetch OpenAlex Author Data
        run: |
          python scripts/get_open_alex_stats.py 
      
      # 6. Calculate All Relevant Stats and store in JSON
      - name: Calculate Stats
        run: |
          python scripts/calculate_stats.py

      # 7. Generate README.md
      - name: Update README
        run: |
          python scripts/create_readme.py

      # 8. Commit Changes
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add reports/tables_stats.json README.md
          git commit -m "Update internal stats and README" || echo "No changes to commit"

      # 9. Push Changes
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}

      # 10. Process to create a pull request
      - name: Wait for branch recognition
        run: sleep 10
        
      - name: Fetch all branches
        run: git fetch --all

      - name: List remote branches
        run: git branch -r

      - name: Install GitHub CLI
        run: |
          sudo apt-get install gh
      
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
      
      - name: Create Pull Request using GitHub CLI
        run: |
          gh pr create --title "Update CSV files from Airtable" \
                       --body "This PR updates the CSV files based on the latest data from Airtable." \
                       --head "${{ env.BRANCH_NAME }}" \
                       --base "main"
